{% load i18n %}
{% get_current_language as LANGUAGE_CODE %}
{% get_available_languages as LANGUAGES %}
{% get_language_info_list for LANGUAGES as languages %}
<div class="fixed-top">
    <div class="position-relative" style="margin-top:50px;">
      <div class="position-absolute top-0 end-0 translate-middle">
        <div class="container">
          <div class="row">
            <div class="col">
              <form action="{% url 'set_language' %}" method="POST">
                {% csrf_token %}
                <input name="next" type="hidden" value="{{ redirect_to }}">
                <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example" name="language" onchange="this.form.submit()">
                  {% for language in languages %}
                  <option value="{{ language.code }}"{% if language.code == LANGUAGE_CODE %} selected{% endif %}>
                    {{ language.name_local }}
                    {% if LANGUAGE_CODE == 'en' %}
                    <img src="https://ipapi.co/static/images/flags/us.png" />
                    {% else %}
                    <img src="https://ipapi.co/static/images/flags/{{LANGUAGE_CODE}}.png" />
                    {% endif %}
                  </option>
                  {% endfor %}
                </select>
              </form>
            </div>
            <div class="col-1">
              {% if LANGUAGE_CODE == 'en' %}
              <img style="object-fit: cover;" src="https://ipapi.co/static/images/flags/us.png" />
              {% else %}
              <img style="object-fit: cover;" src="https://ipapi.co/static/images/flags/{{LANGUAGE_CODE}}.png" />
              {% endif %}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
<script type="text/javascript">
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "e815a36ng3");
</script>
    <!-- Yandex.Metrika counter -->
<script type="text/javascript" >
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();
   for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
   k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

   ym(90624869, "init", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true
   });
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/90624869" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->
    <!-- Yandex.RTB -->
<script>window.yaContextCb=window.yaContextCb||[]</script>
<script src="https://yandex.ru/ads/system/context.js" async></script>
<meta name="yandex-verification" content="6bd5e2cc7d84e7b1" />
<title>Exchange Rates</title>
<!-- <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4137874891184814"
 crossorigin="anonymous"></script> -->
 <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7773722896374259"
     crossorigin="anonymous"></script>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8DHWL20H58"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8DHWL20H58');
</script>
        <!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-NW763C2');</script>
<!-- End Google Tag Manager -->
<script type="module">
  // Import the functions you need from the SDKs you need
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.6/firebase-app.js";
  import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.6.6/firebase-analytics.js";
  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  const firebaseConfig = {
    apiKey: "AIzaSyDpWaFi5QLTNc-yY0ieMKJtGOmbm2ofBm4",
    authDomain: "c0mplex.firebaseapp.com",
    projectId: "c0mplex",
    storageBucket: "c0mplex.appspot.com",
    messagingSenderId: "755681568857",
    appId: "1:755681568857:web:102b1b733df55baefe2948",
    measurementId: "G-H8XGTS4B9J"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const analytics = getAnalytics(app);
</script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
<link rel="icon" sizes="16x16" href="/static/img/favicon.ico">
<link rel="stylesheet" href="/static/css/C0mplexButtonStyle.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap" rel="stylesheet">
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    :root {
        --bg-color: #0a0a0f;
        --text-color: #ffffff;
        --card-bg: rgba(255, 255, 255, 0.05);
        --border-color: rgba(255, 255, 255, 0.1);
        --accent-color: #00ffff;
        --accent-secondary: #ffd700;
        --accent-glow: rgba(0, 255, 255, 0.3);
    }

    [data-theme="light"] {
        --bg-color: #f0f4f8;
        --text-color: #1a1a2e;
        --card-bg: rgba(255, 255, 255, 0.7);
        --border-color: rgba(0, 0, 0, 0.1);
        --accent-color: #667eea;
        --accent-secondary: #f59e0b;
        --accent-glow: rgba(102, 126, 234, 0.3);
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--bg-color);
        color: var(--text-color);
        transition: all 0.5s ease;
        overflow-x: hidden;
        position: relative;
        min-height: 100vh;
    }

    #threejs-canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        opacity: 0.7;
    }

    h2 {
        font-family: 'Orbitron', sans-serif;
        font-weight: 700;
        background: linear-gradient(135deg, var(--accent-color), var(--accent-secondary));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-align: center;
        margin: 2rem 0;
        animation: float 3s ease-in-out infinite;
        font-size: 2rem;
        padding: 1rem;
        position: relative;
        z-index: 10;
    }

    @keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
    }

    @keyframes fadeInUp {
        from { opacity: 0; transform: translateY(30px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .table {
        background: var(--card-bg);
        backdrop-filter: blur(20px);
        border-radius: 15px;
        overflow: hidden;
        border: 1px solid var(--border-color);
        animation: fadeInUp 0.8s ease;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    }

    .table thead th {
        background: linear-gradient(135deg, var(--accent-color), var(--accent-secondary));
        color: white;
        font-weight: 600;
        padding: 1.5rem 1rem;
        border: none;
        font-family: 'Orbitron', sans-serif;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .table tbody tr {
        border-bottom: 1px solid var(--border-color);
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.02);
    }

    .table tbody tr:hover {
        background: rgba(0, 255, 255, 0.1);
        transform: scale(1.01);
        box-shadow: 0 4px 15px var(--accent-glow);
    }

    .table tbody td {
        padding: 1.2rem 1rem;
        color: var(--text-color);
        border: none;
        vertical-align: middle;
    }

    .table tbody td:first-child {
        font-weight: 600;
        color: var(--accent-color);
        font-family: 'Orbitron', monospace;
    }

    .theme-toggle {
        position: fixed;
        top: 20px;
        left: 20px;
        z-index: 1000;
        background: var(--card-bg);
        backdrop-filter: blur(10px);
        border: 2px solid var(--accent-color);
        color: var(--text-color);
        padding: 12px 24px;
        border-radius: 50px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
        box-shadow: 0 4px 15px var(--accent-glow);
    }

    .theme-toggle:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 25px var(--accent-glow);
    }

    .C0mplexButton { animation: fadeInUp 1s ease; }
    .fixed-top { z-index: 100; }

    @media (max-width: 768px) {
        h2 { font-size: 1.3rem; }
        .table thead th { padding: 1rem 0.5rem; font-size: 0.75rem; }
        .table tbody td { padding: 0.8rem 0.5rem; font-size: 0.85rem; }
    }

    ::-webkit-scrollbar { width: 10px; }
    ::-webkit-scrollbar-track { background: rgba(255, 255, 255, 0.05); }
    ::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, var(--accent-color), var(--accent-secondary));
        border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(135deg, var(--accent-secondary), var(--accent-color));
    }
</style>
<canvas id="threejs-canvas"></canvas>

<button id="themeButton" class="theme-toggle" onclick="toggleTheme()">
    <i class="fas fa-moon"></i> <span id="themeText">Light Mode</span>
</button>

<div id="conn" style="visibility:hidden;position:absolute;margin-left:45%;margin-top:20%;z-index:9999">
    <img src="/static/img/buffering.gif" />
</div>
<input id="hh" type="hidden" />
<div class="C0mplexButton float-end">
    <a href="/#services">
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        X
    </a>
</div>
<h2>
    {% if request.LANGUAGE_CODE == 'uz' %}
    O'zbekiston Respublikasi Markaziy bankining valyuta kurslari
    {% else %}
    {% if request.LANGUAGE_CODE == 'ru' %}
    Курсы валют Центрального банка Республики Узбекистан
    {% else %}
    Exchange rates of the Central Bank of the Republic of Uzbekistan
    {% endif %}
    {% endif %}
    <a href="https://play.google.com/store/apps/details?id=exchangerates.complexprogrammer.uz" target="_blank">
        <img src="/static/img/google-play.svg" />
    </a>
</h2>
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-layout="in-article"
data-ad-format="fluid"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="2303661293"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!-- <ins class="adsbygoogle"
<!-- style="display:block; text-align:center;"
data-ad-layout="in-article"
data-ad-format="fluid"
data-ad-client="ca-pub-4137874891184814"
data-ad-slot="6832564320"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script> --> -->
<div ng-app="App" ng-controller="ExchangeRates">
    <table class="table table-hover" ng-show="ShowData">
        <thead>
            <tr>
                <th>№</th>
                <th scope="col">Name of currencies</th>
                <th scope="col">Symbolic code</th>
                <th scope="col">Digital code</th>
                <th scope="col">Differensial</th>
                <th scope="col">Rate</th>
            </tr>
        </thead>
        <tbody>
            {% for item in data%}
            <tr>
                <td>{{ forloop.counter }}</td>
                <td>
                    <i>
                        <svg style="width:24px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                            <use href="/static/flag_image/symbol_defs.svg#icon-currency-{{item.Ccy}}" xlink:href="" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
                        </svg>
                    </i>
                    {{item.Nominal}}
                    {% if request.LANGUAGE_CODE == 'uz' %}
                    <span>{{item.CcyNm_UZ}}</span>
                    {% else %}
                    {% if request.LANGUAGE_CODE == 'ru' %}
                    <span>{{item.CcyNm_RU}}</span>
                    {% else %}
                    <span>{{item.CcyNm_EN}}</span>
                    {% endif %}
                    {% endif %}
                </td>
                <td>{{item.Ccy}}</td>
                <td>{{item.Code}}</td>
                <td>
                    {% if item.Diff > '0' %}
                        <div style="color:green">
                            +{{item.Diff}}
                            <i>
                                <svg style="width:24px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                                    <use xlink:href="/static/icons/sprite_icons.svg#icon__chart_up" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
                                </svg>
                            </i>
                        </div>
                    {% endif %}
                    {% if item.Diff == '0' %}
                        <div style="color:gray">
                            {{item.Diff}}
                            <i>
                                <svg style="width:24px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                                    <use xlink:href="/static/icons/sprite_icons.svg#icon__minus" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
                                </svg>
                            </i>
                        </div>
                    {% endif %}
                    {% if item.Diff < '0' %}
                        <div style="color:red">
                            {{item.Diff}}
                            <i>
                                <svg style="width:24px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                                    <use xlink:href="/static/icons/sprite_icons.svg#icon__chart_down" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
                                </svg>
                            </i>
                        </div>
                    {% endif %}
                </td>
                <td>{{item.Rate}} 
                    {% if request.LANGUAGE_CODE == 'uz' %}
                    so'm
                    {% else %}
                    {% if request.LANGUAGE_CODE == 'ru' %}
                    сум
                    {% else %}
                    sum
                    {% endif %}
                    {% endif %}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
{% include 'comment_form.html' %}
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-format="autorelaxed"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="2479701367"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!-- <ins class="adsbygoogle"
<!--     style="display:block; text-align:center;"
    data-ad-format="autorelaxed"
    data-ad-client="ca-pub-4137874891184814"
    data-ad-slot="4202531555"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script> --> -->
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-format="fluid"
data-ad-layout-key="-an-4i-cp+a2+21k"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="4679993061"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!-- <ins class="adsbygoogle"
<!--     style="display:block; text-align:center;"
    data-ad-format="fluid"
    data-ad-layout-key="-6t+ed+2i-1n-4w"
    data-ad-client="ca-pub-4137874891184814"
    data-ad-slot="7442938415"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script> --> -->
<!-- Display 1 -->
<ins class="adsbygoogle"
    style="display:block; text-align:center;"
    data-ad-client="ca-pub-7773722896374259"
    data-ad-slot="3869366477"
    data-ad-format="auto"
    data-full-width-responsive="true"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!-- 1 chi abzast Mobil -->
<!-- <ins class="adsbygoogle"
<!--      style="display:block; text-align:center;"
     data-ad-client="ca-pub-4137874891184814"
     data-ad-slot="2799587029"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script> --> -->

<script>
// Three.js 3D Currency Animation with Coins
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer({
    canvas: document.getElementById('threejs-canvas'),
    alpha: true,
    antialias: true
});

renderer.setSize(window.innerWidth, window.innerHeight);
renderer.setPixelRatio(window.devicePixelRatio);

// Create floating coins (representing currencies)
const coinGroup = new THREE.Group();

for(let i = 0; i < 20; i++) {
    const coinGeometry = new THREE.CylinderGeometry(2, 2, 0.3, 32);
    const coinMaterial = new THREE.MeshBasicMaterial({
        color: i % 2 === 0 ? 0x00ffff : 0xffd700,
        wireframe: true,
        transparent: true,
        opacity: 0.4
    });
    const coin = new THREE.Mesh(coinGeometry, coinMaterial);

    coin.position.x = (Math.random() - 0.5) * 60;
    coin.position.y = (Math.random() - 0.5) * 60;
    coin.position.z = (Math.random() - 0.5) * 60;
    coin.rotation.x = Math.random() * Math.PI;
    coin.rotation.z = Math.random() * Math.PI;

    coinGroup.add(coin);
}

scene.add(coinGroup);

// Create particles
const particlesGeometry = new THREE.BufferGeometry();
const particlesCount = 3000;
const posArray = new Float32Array(particlesCount * 3);

for(let i = 0; i < particlesCount * 3; i++) {
    posArray[i] = (Math.random() - 0.5) * 100;
}

particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));

const particlesMaterial = new THREE.PointsMaterial({
    size: 0.05,
    color: 0x00ffff,
    transparent: true,
    opacity: 0.5,
    blending: THREE.AdditiveBlending
});

const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
scene.add(particlesMesh);

// Add currency symbol shapes
const currencyLines = new THREE.Group();
for(let i = 0; i < 30; i++) {
    const geometry = new THREE.BufferGeometry();
    const positions = [];

    const x1 = (Math.random() - 0.5) * 50;
    const y1 = (Math.random() - 0.5) * 50;
    const z1 = (Math.random() - 0.5) * 50;
    const x2 = (Math.random() - 0.5) * 50;
    const y2 = (Math.random() - 0.5) * 50;
    const z2 = (Math.random() - 0.5) * 50;

    positions.push(x1, y1, z1, x2, y2, z2);
    geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));

    const material = new THREE.LineBasicMaterial({
        color: 0xffd700,
        transparent: true,
        opacity: 0.3
    });

    const line = new THREE.Line(geometry, material);
    currencyLines.add(line);
}

scene.add(currencyLines);

camera.position.z = 50;

let mouseX = 0;
let mouseY = 0;

document.addEventListener('mousemove', (event) => {
    mouseX = (event.clientX / window.innerWidth) * 2 - 1;
    mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
});

function animate() {
    requestAnimationFrame(animate);

    // Rotate coins
    coinGroup.rotation.y += 0.002;
    coinGroup.children.forEach((coin, index) => {
        coin.rotation.y += 0.01 + index * 0.001;
        coin.position.y += Math.sin(Date.now() * 0.001 + index) * 0.01;
    });

    // Rotate particles
    particlesMesh.rotation.y += 0.0005;
    particlesMesh.rotation.x += 0.0003;

    // Rotate currency lines
    currencyLines.rotation.x += 0.0003;
    currencyLines.rotation.y += 0.0005;

    // Interactive camera
    camera.position.x += (mouseX * 15 - camera.position.x) * 0.05;
    camera.position.y += (mouseY * 15 - camera.position.y) * 0.05;
    camera.lookAt(scene.position);

    renderer.render(scene, camera);
}

animate();

window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});

// Theme Toggle Function
function toggleTheme() {
    const body = document.documentElement;
    const currentTheme = body.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';

    body.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);

    const themeButton = document.getElementById('themeButton');

    if (newTheme === 'light') {
        themeButton.innerHTML = '<i class="fas fa-sun"></i> <span id="themeText">Dark Mode</span>';
        particlesMaterial.color.setHex(0x667eea);
        coinGroup.children.forEach((coin, i) => {
            coin.material.color.setHex(i % 2 === 0 ? 0x667eea : 0xf59e0b);
        });
        currencyLines.children.forEach(line => {
            line.material.color.setHex(0xf59e0b);
        });
    } else {
        themeButton.innerHTML = '<i class="fas fa-moon"></i> <span id="themeText">Light Mode</span>';
        particlesMaterial.color.setHex(0x00ffff);
        coinGroup.children.forEach((coin, i) => {
            coin.material.color.setHex(i % 2 === 0 ? 0x00ffff : 0xffd700);
        });
        currencyLines.children.forEach(line => {
            line.material.color.setHex(0xffd700);
        });
    }
}

// Set initial theme
document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);

    const themeButton = document.getElementById('themeButton');

    if (savedTheme === 'light') {
        themeButton.innerHTML = '<i class="fas fa-sun"></i> <span id="themeText">Dark Mode</span>';
        particlesMaterial.color.setHex(0x667eea);
        coinGroup.children.forEach((coin, i) => {
            coin.material.color.setHex(i % 2 === 0 ? 0x667eea : 0xf59e0b);
        });
        currencyLines.children.forEach(line => {
            line.material.color.setHex(0xf59e0b);
        });
    } else {
        themeButton.innerHTML = '<i class="fas fa-moon"></i> <span id="themeText">Light Mode</span>';
    }
});
</script>