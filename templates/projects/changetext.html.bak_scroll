{% load i18n %}
{% get_current_language as LANGUAGE_CODE %}
{% get_available_languages as LANGUAGES %}
{% get_language_info_list for LANGUAGES as languages %}
<div class="fixed-top">
    <div class="position-relative" style="margin-top:50px;">
      <div class="position-absolute top-0 end-0 translate-middle">
        <div class="container">
          <div class="row">
            <div class="col">
              <form action="{% url 'set_language' %}" method="POST">
                {% csrf_token %}
                <input name="next" type="hidden" value="{{ redirect_to }}">
                <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example" name="language" onchange="this.form.submit()">
                  {% for language in languages %}
                  <option value="{{ language.code }}"{% if language.code == LANGUAGE_CODE %} selected{% endif %}>
                    {{ language.name_local }}
                    {% if LANGUAGE_CODE == 'en' %}
                    <img src="https://ipapi.co/static/images/flags/us.png" />
                    {% else %}
                    <img src="https://ipapi.co/static/images/flags/{{LANGUAGE_CODE}}.png" />
                    {% endif %}
                  </option>
                  {% endfor %}
                </select>
              </form>
            </div>
            <div class="col-1">
              {% if LANGUAGE_CODE == 'en' %}
              <img style="object-fit: cover;" src="https://ipapi.co/static/images/flags/us.png" />
              {% else %}
              <img style="object-fit: cover;" src="https://ipapi.co/static/images/flags/{{LANGUAGE_CODE}}.png" />
              {% endif %}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
<script type="text/javascript">
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "e815a36ng3");
</script>
    <!-- Yandex.Metrika counter -->
<script type="text/javascript" >
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();
   for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
   k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

   ym(90624869, "init", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true
   });
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/90624869" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->
    <!-- Yandex.RTB -->
<script>window.yaContextCb=window.yaContextCb||[]</script>
<script src="https://yandex.ru/ads/system/context.js" async></script>
<meta name="yandex-verification" content="6bd5e2cc7d84e7b1" />
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4137874891184814"
 crossorigin="anonymous"></script>
 <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7773722896374259"
     crossorigin="anonymous"></script>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8DHWL20H58"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8DHWL20H58');
</script>
        <!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-NW763C2');</script>
<!-- End Google Tag Manager -->
<script type="module">
  // Import the functions you need from the SDKs you need
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.6/firebase-app.js";
  import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.6.6/firebase-analytics.js";
  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  const firebaseConfig = {
    apiKey: "AIzaSyDpWaFi5QLTNc-yY0ieMKJtGOmbm2ofBm4",
    authDomain: "c0mplex.firebaseapp.com",
    projectId: "c0mplex",
    storageBucket: "c0mplex.appspot.com",
    messagingSenderId: "755681568857",
    appId: "1:755681568857:web:102b1b733df55baefe2948",
    measurementId: "G-H8XGTS4B9J"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const analytics = getAnalytics(app);
</script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<link rel="icon" sizes="16x16" href="/static/img/favicon.ico">
<link rel="stylesheet" href="/static/css/C0mplexButtonStyle.css">
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css"/>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/semantic.min.css"/>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css"/>
<script src="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.3/angular.min.js" integrity="sha512-KZmyTq3PLx9EZl0RHShHQuXtrvdJ+m35tuOiwlcZfs/rE7NZv29ygNA8SFCkMXTnYZQK2OX0Gm2qKGfvWEtRXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap" rel="stylesheet">

<title>Change text</title>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    :root {
        --bg-color: #0a0a0f;
        --text-color: #ffffff;
        --card-bg: rgba(255, 255, 255, 0.05);
        --border-color: rgba(255, 255, 255, 0.1);
        --accent-color: #00ffff;
        --accent-secondary: #ff00ff;
        --accent-glow: rgba(0, 255, 255, 0.3);
    }

    [data-theme="light"] {
        --bg-color: #f0f4f8;
        --text-color: #1a1a2e;
        --card-bg: rgba(255, 255, 255, 0.7);
        --border-color: rgba(0, 0, 0, 0.1);
        --accent-color: #667eea;
        --accent-secondary: #764ba2;
        --accent-glow: rgba(102, 126, 234, 0.3);
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--bg-color);
        color: var(--text-color);
        transition: all 0.5s ease;
        overflow-x: hidden;
        position: relative;
        min-height: 100vh;
    }

    #threejs-canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        opacity: 0.7;
    }

    .container {
        position: relative;
        z-index: 10;
        padding-top: 2rem;
    }

    .glass-card {
        background: var(--card-bg);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border: 1px solid var(--border-color);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        transition: all 0.3s ease;
        animation: fadeInUp 0.8s ease;
        margin-bottom: 2rem;
    }

    .glass-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 50px 0 rgba(0, 0, 0, 0.5);
        border-color: var(--accent-color);
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes pulse {
        0%, 100% {
            box-shadow: 0 0 20px var(--accent-glow);
        }
        50% {
            box-shadow: 0 0 40px var(--accent-glow);
        }
    }

    @keyframes float {
        0%, 100% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    h2 {
        font-family: 'Orbitron', sans-serif;
        font-weight: 700;
        background: linear-gradient(135deg, var(--accent-color), var(--accent-secondary));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-align: center;
        margin: 2rem 0;
        animation: float 3s ease-in-out infinite;
        font-size: 2.5rem;
    }

    h6 {
        text-align: center;
        color: var(--text-color);
        margin: 1rem 0;
        font-weight: 500;
    }

    .form-control {
        background: rgba(255, 255, 255, 0.05);
        border: 2px solid var(--border-color);
        border-radius: 15px;
        color: var(--text-color);
        padding: 1.5rem;
        transition: all 0.3s ease;
        font-family: 'Poppins', sans-serif;
        font-size: 1rem;
        margin-bottom: 1.5rem;
        resize: vertical;
    }

    .form-control:focus {
        background: rgba(255, 255, 255, 0.08);
        border-color: var(--accent-color);
        color: var(--text-color);
        box-shadow: 0 0 20px var(--accent-glow);
        outline: none;
    }

    .form-control::placeholder {
        color: var(--text-color);
        opacity: 0.5;
    }

    .theme-toggle {
        position: fixed;
        top: 20px;
        left: 20px;
        z-index: 1000;
        background: var(--card-bg);
        backdrop-filter: blur(10px);
        border: 2px solid var(--accent-color);
        color: var(--text-color);
        padding: 12px 24px;
        border-radius: 50px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
        box-shadow: 0 4px 15px var(--accent-glow);
    }

    .theme-toggle:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 25px var(--accent-glow);
    }

    .C0mplexButton {
        animation: fadeInUp 1s ease;
    }

    marquee h2 {
        color: var(--accent-color) !important;
        text-shadow: 0 0 20px var(--accent-glow);
    }

    .fixed-top {
        z-index: 100;
    }

    @media (max-width: 768px) {
        .glass-card {
            padding: 1rem;
        }

        h2 {
            font-size: 1.8rem;
        }

        .form-control {
            padding: 1rem;
        }
    }

    ::-webkit-scrollbar {
        width: 10px;
    }

    ::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
    }

    ::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, var(--accent-color), var(--accent-secondary));
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(135deg, var(--accent-secondary), var(--accent-color));
    }
</style>
<script>
    {% comment %} var app = angular.module("App", []); {% endcomment %}
     var app = angular.module("App", [], function($httpProvider) {
        $httpProvider.defaults.xsrfCookieName = 'csrftoken';
        $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';
      }); 
    app.controller("Data", ["$scope", "$http", "$filter", function ($scope, $http, $filter) {
        $scope.TextLength = 0;
        $scope.ChangeText = function (text) {
            if(text){
                $http({
                    method: 'GET',
                    url: "/GetChangeTextData?text=" + text,
                    dataType: "json"
                }).then(function (d) {
                    $scope.new_text = d.data;
                    $scope.TextLength = d.data.length;
                }, function (error) {
                    console.log("error in GetChangeTextData -> ", error);
                    alertify.error("Xatolik yuz berdi");
                });
            }
            else{
                $scope.new_text=''
            }
        }
        var old_text = document.getElementById('old_text');
        old_text.focus();
        document.getElementById("new_text").disabled = true;
        $scope.CopyText= function() {
                document.getElementById("new_text").disabled = false;
                /* Get the text field */
                var copyText = document.getElementById("new_text");

                /* Select the text field */
                copyText.select();
                copyText.setSelectionRange(0, 99999); /* For mobile devices */

                /* Copy the text inside the text field */
                document.execCommand("copy");

                /* Alert the copied text */
                alertify.success("Copied");
                document.getElementById("new_text").disabled = true;
            }
                document.getElementById('old_text').focus();

        }]);
        app.config(['$httpProvider', function($httpProvider) {
            $httpProvider.defaults.xsrfCookieName = 'csrftoken';
            $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';
        }]);



</script>
<script async src="https://ad.mail.ru/static/ads-async.js"></script>
<ins class="mrg-tag" data-ad-client="ad-1128075" data-ad-slot="1128075"></ins>
<script>(MRGtag = window.MRGtag || []).push({})</script>
    <!-- Yandex.RTB R-A-1963742-1 -->
<div id="yandex_rtb_R-A-1963742-1"></div>
<script>window.yaContextCb.push(()=>{
  Ya.Context.AdvManager.render({
    renderTo: 'yandex_rtb_R-A-1963742-1',
    blockId: 'R-A-1963742-1'
  })
})</script>
<marquee>
    <h2 style="color:green;">
        {% if request.LANGUAGE_CODE == 'uz' %}
        Xizmat lotin yoki kirill yozuvini belgilaydi.
        {% else %}
        {% if request.LANGUAGE_CODE == 'ru' %}
        Сервис определяет латиницу или кириллицу.
        {% else %}
        The service determines the Latin or Cyrillic text.
        {% endif %}
        {% endif %}
    </h2>
</marquee>

<canvas id="threejs-canvas"></canvas>

<button id="themeButton" class="theme-toggle" onclick="toggleTheme()">
    <i class="fas fa-moon"></i> <span id="themeText">Light Mode</span>
</button>

<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-layout="in-article"
data-ad-format="fluid"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="2303661293"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-layout="in-article"
data-ad-format="fluid"
data-ad-client="ca-pub-4137874891184814"
data-ad-slot="6832564320"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div ng-app="App" ng-controller="Data" class="container">
  <div class="C0mplexButton float-end">
    <a href="/#services">
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        X
    </a>
  </div>
    <h2>
        {% if request.LANGUAGE_CODE == 'uz' %}
        Lotin Kirill
        {% else %}
        {% if request.LANGUAGE_CODE == 'ru' %}
        Латинский Кирилл
        {% else %}
        Latin Kirill
        {% endif %}
        {% endif %}
        <a href="https://play.google.com/store/apps/details?id=changetext.complexprogrammer.uz" target="_blank">
            <img src="/static/img/google-play.svg" />
        </a>
    </h2>
    {% if request.LANGUAGE_CODE == 'uz' %}
    {% verbatim %}
    <h6 ng-show="TextLength==0" style="text-align:center">
        Matnni kiriting
    </h6>
    <h6 ng-show="TextLength!=0" style="text-align:center">
        Matndagi belgilar soni {{TextLength}} ta
    </h6>
    {% endverbatim %}
    {% else %}
    {% if request.LANGUAGE_CODE == 'ru' %}
    {% verbatim %}
    <h6 ng-show="TextLength==0" style="text-align:center">
        Введите текст
    </h6>
    <h6 ng-show="TextLength!=0" style="text-align:center">
        Количество символов в тексте {{TextLength}}
    </h6>
    {% endverbatim %}
    {% else %}
    {% verbatim %}
    <h6 ng-show="TextLength==0" style="text-align:center">
        Enter the text
    </h6>
    <h6 ng-show="TextLength!=0" style="text-align:center">
        The number of characters in the text {{TextLength}}
    </h6>
    {% endverbatim %}
    {% endif %}
    {% endif %}
    <div class="glass-card">
    <form method="post" action="/ChangeTextData" id="form">
        <textarea class="form-control" ng-model="old_text" ng-change="ChangeText(old_text)" rows="10" cols="50"  name="old_text" id="old_text" placeholder="Enter your text..."></textarea>
        <textarea ng-model="new_text" class="form-control" name="new_text" id="new_text" rows="10" cols="50" placeholder="Result will appear here..." disabled>{{new_text}}</textarea>
        <div class="C0mplexButton Success">
            <a href="#" style="width:100%;text-align:center" ng-click="CopyText()">
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <i class="fa fa-copy"></i>
                {% if request.LANGUAGE_CODE == 'uz' %}
                Nusxalash
                {% else %}
                {% if request.LANGUAGE_CODE == 'ru' %}
                Копировать
                {% else %}
                Copy
                {% endif %}
                {% endif %}
            </a>
        </div>
        <p style="margin:15px">
            {% if request.LANGUAGE_CODE == 'uz' %}
            Koʼpincha bizda kirill yoki lotin alifbosidagi matnlarni kirilldan-lotinga, lotindan-kirillga oʼgirishga ehtiyoj boʼladi.Ushbu kiril lotin, lotin kiril onlayn translit dasturi oʼzbek tilidagi har qanday matnlarni hech qanday muammosiz hal qilishingizda sizga yordam beradi.Bu dasturning afzalligi shundaki, simvollar soni cheklanmangan, hamda qaysi tilga oʼgirishni dasturni oʼzi aniqlaydi. Butun bir maqolani yoki matnni birinchi boʼsh katakka qoʼysangiz, bir necha soniyadan soʼng tayyor natijani qoʼlga kiritasiz. Hozircha sinov tartibida ishlayotganligi sababli, natijani tekshirib oling.
            {% else %}
            {% if request.LANGUAGE_CODE == 'ru' %}
            Часто нам требуется конвертировать кириллические или латинские тексты с кириллицы на латиницу, с латиницы на кириллицу.Эта программа онлайн-транслитерации Кириллица Латиница, Латиница Кириллица поможет вам без проблем решить любой текст на узбекском языке.Преимущество этой программы в том, что количество символов не ограничено, и программа сама определяет, какой язык конвертировать. Если в первую пустую ячейку поместить всю статью или текст, то через несколько секунд вы получите готовый результат. Поскольку сейчас он работает в пробном режиме, проверьте результат.
            {% else %}
            Often we need to convert Cyrillic or Latin texts from Cyrillic to Latin, from Latin to Cyrillic. This Cyrillic Latin, Latin Cyrillic online transliteration program will help you solve any text in the Uzbek language without any problems. The advantage of this program is that the number of characters is not limited, and the program determines which language to convert. If you put an entire article or text in the first empty cell, you will get the finished result in a few seconds. As it is running in trial mode for now, check the result.
            {% endif %}
            {% endif %}
        </p>
    </form>
    </div>
</div>
{% include 'comment_form.html' %}
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-format="autorelaxed"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="2479701367"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-format="autorelaxed"
data-ad-client="ca-pub-4137874891184814"
data-ad-slot="4202531555"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-format="fluid"
data-ad-layout-key="-an-4i-cp+a2+21k"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="4679993061"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-format="fluid"
data-ad-layout-key="-6t+ed+2i-1n-4w"
data-ad-client="ca-pub-4137874891184814"
data-ad-slot="7442938415"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!-- Display 1 -->
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-client="ca-pub-7773722896374259"
data-ad-slot="3869366477"
data-ad-format="auto"
data-full-width-responsive="true"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!-- 1 chi abzast Mobil -->
<ins class="adsbygoogle"
style="display:block; text-align:center;"
data-ad-client="ca-pub-4137874891184814"
data-ad-slot="2799587029"
data-ad-format="auto"
data-full-width-responsive="true"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script>
// Three.js 3D Text Transformation Animation
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer({
    canvas: document.getElementById('threejs-canvas'),
    alpha: true,
    antialias: true
});

renderer.setSize(window.innerWidth, window.innerHeight);
renderer.setPixelRatio(window.devicePixelRatio);

// Create particles forming Latin and Cyrillic letters
const particlesGeometry = new THREE.BufferGeometry();
const particlesCount = 5000;
const posArray = new Float32Array(particlesCount * 3);

for(let i = 0; i < particlesCount * 3; i++) {
    posArray[i] = (Math.random() - 0.5) * 100;
}

particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));

const particlesMaterial = new THREE.PointsMaterial({
    size: 0.05,
    color: 0x00ffff,
    transparent: true,
    opacity: 0.6,
    blending: THREE.AdditiveBlending
});

const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
scene.add(particlesMesh);

// Add morphing text shapes
const group = new THREE.Group();

// Create rotating rings (representing text transformation)
for(let i = 0; i < 3; i++) {
    const geometry = new THREE.TorusGeometry(10 + i * 5, 0.5, 16, 100);
    const material = new THREE.MeshBasicMaterial({
        color: i % 2 === 0 ? 0x00ffff : 0xff00ff,
        wireframe: true,
        transparent: true,
        opacity: 0.3
    });
    const torus = new THREE.Mesh(geometry, material);
    torus.rotation.x = Math.random() * Math.PI;
    torus.rotation.y = Math.random() * Math.PI;
    group.add(torus);
}

scene.add(group);

// Add floating letters effect
const linesGeometry = new THREE.BufferGeometry();
const linesCount = 50;
const linesPositions = [];

for(let i = 0; i < linesCount; i++) {
    const x1 = (Math.random() - 0.5) * 50;
    const y1 = (Math.random() - 0.5) * 50;
    const z1 = (Math.random() - 0.5) * 50;
    const x2 = (Math.random() - 0.5) * 50;
    const y2 = (Math.random() - 0.5) * 50;
    const z2 = (Math.random() - 0.5) * 50;

    linesPositions.push(x1, y1, z1, x2, y2, z2);
}

linesGeometry.setAttribute('position', new THREE.Float32BufferAttribute(linesPositions, 3));

const linesMaterial = new THREE.LineBasicMaterial({
    color: 0xff00ff,
    transparent: true,
    opacity: 0.2
});

const lines = new THREE.LineSegments(linesGeometry, linesMaterial);
scene.add(lines);

camera.position.z = 40;

let mouseX = 0;
let mouseY = 0;

document.addEventListener('mousemove', (event) => {
    mouseX = (event.clientX / window.innerWidth) * 2 - 1;
    mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
});

function animate() {
    requestAnimationFrame(animate);

    // Rotate particles
    particlesMesh.rotation.y += 0.001;
    particlesMesh.rotation.x += 0.0005;

    // Rotate text transformation rings
    group.rotation.x += 0.002;
    group.rotation.y += 0.003;

    // Rotate lines
    lines.rotation.x += 0.0005;
    lines.rotation.y += 0.001;

    // Interactive camera movement
    camera.position.x += (mouseX * 10 - camera.position.x) * 0.05;
    camera.position.y += (mouseY * 10 - camera.position.y) * 0.05;
    camera.lookAt(scene.position);

    renderer.render(scene, camera);
}

animate();

window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});

// Theme Toggle Function
function toggleTheme() {
    const body = document.documentElement;
    const currentTheme = body.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';

    body.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);

    const themeButton = document.getElementById('themeButton');

    if (newTheme === 'light') {
        themeButton.innerHTML = '<i class="fas fa-sun"></i> <span id="themeText">Dark Mode</span>';
        particlesMaterial.color.setHex(0x667eea);
        group.children.forEach((child, i) => {
            child.material.color.setHex(i % 2 === 0 ? 0x667eea : 0x764ba2);
        });
        linesMaterial.color.setHex(0x764ba2);
    } else {
        themeButton.innerHTML = '<i class="fas fa-moon"></i> <span id="themeText">Light Mode</span>';
        particlesMaterial.color.setHex(0x00ffff);
        group.children.forEach((child, i) => {
            child.material.color.setHex(i % 2 === 0 ? 0x00ffff : 0xff00ff);
        });
        linesMaterial.color.setHex(0xff00ff);
    }
}

// Set initial theme from localStorage
document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);

    const themeButton = document.getElementById('themeButton');

    if (savedTheme === 'light') {
        themeButton.innerHTML = '<i class="fas fa-sun"></i> <span id="themeText">Dark Mode</span>';
        particlesMaterial.color.setHex(0x667eea);
        group.children.forEach((child, i) => {
            child.material.color.setHex(i % 2 === 0 ? 0x667eea : 0x764ba2);
        });
        linesMaterial.color.setHex(0x764ba2);
    } else {
        themeButton.innerHTML = '<i class="fas fa-moon"></i> <span id="themeText">Light Mode</span>';
    }
});
</script>